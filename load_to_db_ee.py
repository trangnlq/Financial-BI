# -*- coding: utf-8 -*-
"""load_to_db_ee.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1hHRe686wuIbNGhgEGAVaebPItx5IyeyI

***Import and setup***
"""

#!pip install -U vnstock3

from vnstock3 import Vnstock
import pandas as pd
from datetime import datetime
import schedule

"""***Connect to SQL Server***"""

import pyodbc

pyodbc.drivers()

conn = pyodbc.connect(
    "Driver={ODBC Driver 17 for SQL Server};"
    "Server=TRANGNLQ;"
    "Database=datn;"
    "Trusted_Connection=yes;"
)

cursor = conn.cursor()

"""***Data***"""

tickers = ['HLO','AME','CJC','TSB','DHP','KIP','HLS','NAG','EMG','VTH',
        'BTH','TBD','NEM','GEE','TGP','TIE','EME','GEX','PAC','PHN',
        'VTB','TYA','VBH']

stock = Vnstock().stock()
df = stock.listing.industries_icb()
code = ['2730']
df = df.loc[df['icb_code'].isin(code)]
df

"""**company**"""

overview = Vnstock().stock(symbol='BTH',source='TCBS').company.overview()
overview['ticker'] = 'BTH'
overview

def companyOverview(tickers):
    for ticker in tickers:
        conn=pyodbc.connect(
            "Driver={ODBC Driver 17 for SQL Server};"
            "Server=TRANGNLQ;"
            "Database=datn;"
            "Trusted_Connection=yes;"
        )
        try:
            new_record=Vnstock().stock(symbol=ticker,source='TCBS').company.overview()
            new_record['ticker']=ticker
            print('in_connect'+ticker)
            try:
                table='ee_company'
                cursor=conn.cursor()
                for i, row in new_record.iterrows():
                    sql="INSERT INTO "+table+" VALUES (?,?,?,?,?,?,?,?,?,?,\
                        ?,?,?,?,?,?,?,?)"
                cursor.execute(sql,tuple(row))
                print("Record inserted")
                conn.commit()
            except Error as e:
                print(f'Errorwhileinserting{ticker}todatabase',e)
        except:
            print(f'Errorwhileextractingdata{ticker}')
    conn.close()
companyOverview(tickers)

"""**balance**"""

stock=Vnstock().stock(symbol='VBH', source='TCBS')
new_record=stock.finance.balance_sheet(period='quarter')
new_record['ticker']='AME'
new_record.reset_index(drop='True')

new_record.columns.values.tolist()

def balanceSheet(tickers):
    for ticker in tickers:
        conn=pyodbc.connect(
            "Driver={ODBC Driver 17 for SQL Server};"
            "Server=TRANGNLQ;"
            "Database=datn;"
            "Trusted_Connection=yes;"
        )
        try:
            stock=Vnstock().stock(symbol=ticker, source='TCBS')
            new_record=stock.finance.balance_sheet(period='quarter')
            new_record['ticker']=ticker
            new_record=new_record.fillna(0)
            new_record.reset_index(drop='True')
            print('in_connect'+ticker)
            try:
                table='ee_balance'
                cursor=conn.cursor()
                for i, row in new_record.iterrows():
                    sql="INSERT INTO "+table+" VALUES(?,?,?,?,?,?,?,?,?,?,\
                        ?,?,?,?,?,?,?,?,?,?)"
                    cursor.execute(sql,tuple(row))
                    print("Recordinserted")
                    conn.commit()
            except Error as e:
                print(f'Errorwhileinserting{ticker}todatabase',e)
        except:
            print(f'Errorwhileextractingdata{ticker}')
    conn.close()
balanceSheet(tickers)

pd.set_option('display.max_columns', None)

new_record.info()

new_record.columns.values.tolist()

"""**cashflow**"""

stock=Vnstock().stock(symbol='AME', source='TCBS')
new_record=stock.finance.cash_flow(period='quarter')
new_record['ticker']='AME'
new_record.reset_index(drop='True')

new_record.columns.values.tolist()

def cashFlow(tickers):
    for ticker in tickers:
        conn=pyodbc.connect(
            "Driver={ODBC Driver 17 for SQL Server};"
            "Server=TRANGNLQ;"
            "Database=datn;"
            "Trusted_Connection=yes;"
        )
        try:
            stock=Vnstock().stock(symbol=ticker, source='TCBS')
            new_record=stock.finance.cash_flow(period='quarter')
            new_record['ticker']=ticker
            new_record=new_record.fillna(0)
            new_record.reset_index(drop='True')
            print('in_connect'+ticker)
            try:
                table='ee_cashflow'
                cursor=conn.cursor()
                for i, row in new_record.iterrows():
                    sql="INSERT INTO "+table+" VALUES(?,?,?,?,?,?,?,?)"
                    cursor.execute(sql,tuple(row))
                    print("Recordinserted")
                    conn.commit()
            except Error as e:
                print(f'Errorwhileinserting{ticker}todatabase',e)
        except:
            print(f'Errorwhileextractingdata{ticker}')
    conn.close()
cashFlow(tickers)

"""**income**"""

stock=Vnstock().stock(symbol='AME', source='TCBS')
new_record=stock.finance.income_statement(period='quarter')
# new_record['ticker']='AME'
# new_record.reset_index(drop='True')
# new_record.info()

new_record.columns.values.tolist()

def incomeStatement(tickers):
    for ticker in tickers:
        conn=pyodbc.connect(
            "Driver={ODBC Driver 17 for SQL Server};"
            "Server=TRANGNLQ;"
            "Database=datn;"
            "Trusted_Connection=yes;"
        )
        try:
            stock=Vnstock().stock(symbol=ticker, source='TCBS')
            new_record=stock.finance.income_statement(period='quarter')
            new_record['ticker']=ticker
            new_record=new_record.fillna(0)
            new_record.reset_index(drop='True')
            print('in_connect'+ticker)
            try:
                table='ee_income'
                cursor=conn.cursor()
                for i, row in new_record.iterrows():
                    sql="INSERT INTO "+table+" VALUES(?,?,?,?,?,?,?,?,?,?,\
                        ?,?,?,?,?,?,?,?,?)"
                    cursor.execute(sql,tuple(row))
                    print("Recordinserted")
                    conn.commit()
            except Error as e:
                print(f'Errorwhileinserting{ticker}todatabase',e)
        except:
            print(f'Errorwhileextractingdata{ticker}')
    conn.close()
incomeStatement(tickers)

"""**ratio**"""

stock=Vnstock().stock(symbol='AME', source='VCI')
new_record=stock.finance.ratio(period='quarter', lang='vi')
# new_record.info()
new_record.head(10)

new_record.columns.values.tolist()

def ratio(tickers):
    for ticker in tickers:
        conn=pyodbc.connect(
            "Driver={ODBC Driver 17 for SQL Server};"
            "Server=TRANGNLQ;"
            "Database=datn;"
            "Trusted_Connection=yes;"
        )
        try:
            stock=Vnstock().stock(symbol=ticker, source='VCI')
            new_record=stock.finance.ratio(period='quarter')
            print('in_connect'+ticker)
            try:
                table='ee_ratio'
                cursor=conn.cursor()
                for i, row in new_record.iterrows():
                    sql="INSERT INTO "+table+" VALUES(?,?,?,?,?,?,?,?,?,?,\
                        ?,?,?,?,?,?,?,?,?,?,\
                        ?,?,?,?,?,?,?,?,?,?,\
                        ?,?,?,?,?,?,?)"
                    cursor.execute(sql,tuple(row))
                    print("Recordinserted")
                    conn.commit()
            except Error as e:
                print(f'Errorwhileinserting{ticker}todatabase',e)
        except:
            print(f'Errorwhileextractingdata{ticker}')
    conn.close()
ratio(tickers)

"""**price**"""

stock=Vnstock().stock(symbol='AME', source='TCBS')

today = str(datetime.now())[:10]
today

stock=Vnstock().stock(symbol='AME',source='VCI')
new_record=stock.quote.history(start='2023-01-01', end=str(datetime.now())[:10], interval='1D')
new_record['ticker']='AME'
new_record

price.columns.values.tolist()

def price(tickers):
    for ticker in tickers:
        conn=pyodbc.connect(
            "Driver={ODBC Driver 17 for SQL Server};"
            "Server=TRANGNLQ;"
            "Database=datn;"
            "Trusted_Connection=yes;"
        )
        try:
            stock=Vnstock().stock(symbol=ticker,source='VCI')
            new_record=stock.quote.history(start='2023-01-01', end=str(datetime.now())[:10], interval='1D')
            new_record['ticker']=ticker
            print('in_connect'+ticker)
            try:
                table='ee_price'
                cursor=conn.cursor()
                for i, row in new_record.iterrows():
                    sql="INSERT INTO "+table+" VALUES (?,?,?,?,?,?,?)"
                cursor.execute(sql,tuple(row))
                print("Record inserted")
                conn.commit()
            except Error as e:
                print(f'Errorwhileinserting{ticker}todatabase',e)
        except:
            print(f'Errorwhileextractingdata{ticker}')
    conn.close()
price(tickers)